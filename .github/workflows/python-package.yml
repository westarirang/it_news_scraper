# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Run Scrapper - Update data

on:
  schedule:
    - cron: '*/5 * * * *' # 주기적으로 실행하기 위한 스케줄링 - cron 설정
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run Scraper with python
      run: |
        python "it_news_scraper.py"
    - name: Commits
      run: |
        current_date=$(date +"%Y%m%d")
        git config --local user.email "westarirangS2@gmail.com"
        git config --local user.name "westarirang"
        git add -f "it_news_$current_date.json" 
        git commit -m "Auto - Update data with Scraping"
    - name: Push
      uses: ad-m/github-push-action@master
      with:
        branch: main
        github_token: ${{ secrets.GITHUB_TOKEN }} 
        
